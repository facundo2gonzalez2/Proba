n=500
data=read.csv(alfajores.txt ,header=TRUE)
data=read.csv(\alfajores.txt ,header=TRUE)
data=read.csv(file= "alfajores.txt" ,header=TRUE)
head(data)
sum(data["fabrica"==0])/500
sum(data$defectuosos.fabrica==1)/500
proba_quilmes = sum(data$fabrica==0)/n
data=read.csv(file= "alfajores.txt" ,header=TRUE)
n=500
proba_quilmes = sum(data$fabrica==0)/n
data=read.csv(file= "alfajores.txt" ,header=TRUE)
n=500
proba_quilmes = sum(data$fabrica==0)/n
proba_quilmes
head(data)
data=read.csv(file= "alfajores.txt" ,header=TRUE)
head(data)
data=read.txt(file= "alfajores.txt" ,header=TRUE)
data=read.table(file= "alfajores.txt" ,header=TRUE)
n=500
proba_quilmes = sum(data$fabrica==0)/n
head(data)
proba_quilmes
proba_quilmesy3defec = sum(data$defectuosos==3 & data$fabrica==0)/n
proba_quilmesy3defec
pxy = t(table(data)) / n
pxy
mean(data$defectuosos)
var(data$defectuosos)
pxy[1,4] / sum(pxy[1,])
# Px(3)
sum(pxy[,1])
# Px(3)
sum(pxy[,4])
pxy
#P(Y=0|X=3) = Pxy(0,3)
pxy[4,1] / sum(pxy[,4])
#P(Y=0|X=3) = Pxy(0,3) / Px(3)
pxy[4,1] / sum(pxy[,4])
#P(Y=0|X=3) = Pxy(0,3) / Px(3)
pxy[4,0] / sum(pxy[,4])
#P(Y=0|X=3) = Pxy(0,3) / Px(3)
pxy[3,0] / sum(pxy[,4])
#P(Y=0|X=3) = Pxy(0,3) / Px(3)
pxy[1,4] / sum(pxy[,4])
#P(Y=1|X=3) = Pxy(1,3) / Px(3)
pxy[2,4] / sum(pxy[,4])
#ejercicio 2
lamparas=read.table(file="lamparas.txt", header = TRUE)
n=sum(lamparas)
n
#a
head(lamparas)
n=sum(lamparas>0)
n
n=sum(lamparas>30)/lamparas
n
#ejercicio 2
lamparas=read.table(file="lamparas.txt", header = FALSE)
#a
head(lamparas)
n=sum(lamparas>30)/lamparas
n
cant_lamparas=26
n=sum(lamparas>30)/cant_lamparas
n
#ejercicio 2
lamparas=read.table(file="lamparas.txt", header = FALSE)
cant_lamparas=26
n=sum(lamparas>30)/cant_lamparas
n
proba_mas30=sum(lamparas>30)/cant_lamparas
proba_mas30
n=500
plot(lamparas,  )
plot(ecdf(lamparas), main='Distribución empírica de la duración de las lámparas', xlab='Duración')
plot(lamparas, main='Distribución empírica de la duración de las lámparas', xlab='Duración')
plot(lamparas, main='Distribución empírica de la duración de las lámparas', xlab='Duración')
#ejercicio 1
data=read.table(file= "alfajores.txt" ,header=TRUE)
n=500
#a
proba_quilmes = sum(data$fabrica==0)/n
proba_quilmes
#b
proba_quilmesy3defec = sum(data$defectuosos==3 & data$fabrica==0)/n
proba_quilmesy3defec
#c
pxy = t(table(data)) / n
pxy
#d
mean(data$defectuosos)
var(data$defectuosos)
#e
#P(X=3|Y=0)= Pxy(3,0)/Py(0)
pxy[1,4] / sum(pxy[1,])
#f
# Px(3)
sum(pxy[,4])
#g
#P(Y=0|X=3) = Pxy(0,3) / Px(3)
pxy[1,4] / sum(pxy[,4])
#h
#P(Y=1|X=3) = Pxy(1,3) / Px(3)
pxy[2,4] / sum(pxy[,4])
#ejercicio 2
lamparas=read.table(file="lamparas.txt", header = FALSE)
cant_lamparas=26
proba_mas30=sum(lamparas>30)/cant_lamparas
proba_mas30
#b
#c
quantile(lamparas,0.1)
graduados=read.table(file="graduados.txt", header = TRUE)
head(graduados)
graduados=read.table(file="graduados.txt", header = FALSE)
head(graduados)
#a
mean(graduados)
#a
mean(graduados<4)
#a
mean(graduados$V1)
median(graduados$V1)
#b
sd(graduados$V1)
distanciaIntercuantil = quantile(graduados$V1,0.25)-quantile(graduados$V1,0.75)
distanciaIntercuantil
distanciaIntercuantil = quantile(graduados$V1,0.75)-quantile(graduados$V1,0.25)
distanciaIntercuantil
distanciaIntercuantil
#c
quantile(lamparas$V1,0.1)
distanciaIntercuantil = quantile(graduados$V1,0.75)-quantile(graduados$V1,0.25)
distanciaIntercuantil
#c
hist(graduados)
#c
hist(graduados$V1)
boxplot(graduados$V1)
distanciaIntercuantil
#c
hist(graduados$V1)
#c
hist(graduados$V1, norm(median(graduados$V1),1))
#c
hist(graduados$V1)
#d
boxplot(graduados$V1)
#d
boxplot(graduados$V1)
density(graduados)
density(graduados$V1)
#a
mean(graduados$V1)
median(graduados$V1)
#b
sd(graduados$V1)
distanciaIntercuantil = quantile(graduados$V1,0.75)-quantile(graduados$V1,0.25)
distanciaIntercuantil
iqd
iqd(graduados$V1)
iqr(graduados$V1)
IQR(graduados$V1)
#c
hist(graduados$V1)
#d
boxplot(graduados$V1)
#f
hist(graduados$V1, prob=TRUE)
#f
hist(graduados$V1, prob=false)
#f
hist(graduados$V1, prob=FALSE)
#f
hist(graduados$V1, prob=TRUE)
curve(dnorm(x, mean = mean(graduados$V1), sd= sd(graduados$V1)), add=TRUE)
help("density")
d<- density(graduados$V1)
plot(d)
#f
hist(graduados$V1, prob=TRUE)
curve(dnorm(x, mean = mean(graduados$V1), sd= sd(graduados$V1)), add=TRUE)
plot(d,add=TRUE)
with(data=graduados, qqnorm(V1))
qqline(graduados$V1, col = "steelblue", lwd = 2)
####ejercicio 4####
ciudades=read.table(ciudades.txt, header=TRUE)
####ejercicio 4####
ciudades=read.table(file="ciudades.txt", header=TRUE)
ciudades
#a
boxplot(ciudades$Argentina, ciudades$EEUU, ciudades$Holanda, ciudades$Japon,)
#a
boxplot(ciudades$Argentina, ciudades$EEUU, ciudades$Holanda, ciudades$Japon, names=c("Arg","EEUU","Hol","Jap"))
#a
boxplot(ciudades$Argentina, ciudades$EEUU, ciudades$Holanda, ciudades$Japon,
names=c("Arg","EEUU","Hol","Jap"))
#a
boxplot(ciudades$Argentina, ciudades$EEUU, ciudades$Holanda, ciudades$Japon, names=c("Arg","EEUU","Hol","Jap"))
mediaArg=mean(ciudades$Argentina)
mediaArg=mean(ciudades$Argentina)
mediaEEUU=mean(ciudades$EEUU)
mediaHol=mean(ciudades$Holanda)
mediaJap=mean(ciudades$Japon)
medianaArg=median(ciudades$Argentina)
medianaEEUU=median(ciudades$EEUU)
medianaHol=median(ciudades$Holanda)
medianaJap=median(ciudades$Japon)
medianaArg=median(ciudades$Argentina)
medianaEEUU=median(ciudades$EEUU)
medianaHol=median(ciudades$Holanda)
medianaJap=median(ciudades$Japon)
sdArg=sd(ciudades$Argentina)
sdEEUU=sd(ciudades$EEUU)
sdHol=sd(ciudades$Holanda)
sdJap=sd(ciudades$Japon)
centralidadfunc <- data.frame(
Media = c(mediaArg,mediaEEUU,mediaHol,mediaJap),
Mediana = c(medianaArg,medianaEEUU,medianaHol,medianaJap),
Desvio = c(sdArg, sdEEUU, sdHol, sdJap))
centralidadfunc
####ejercicio 5####
ingresos=read.table(file"ingesos.txt",header=FALSE)
####ejercicio 5####
ingresos=read.table(file="ingesos.txt",header=FALSE)
####ejercicio 5####
ingresos=read.table(file="ingresos.txt",header=FALSE)
ingresos
#a
ingresoMinimo=min(ingresos$V1)
proba_ingresoMinimo=sum(ingresos$V1==ingresosMinimo)/1000
#a
ingresoMinimo=min(ingresos$V1)
proba_ingresoMinimo=sum(ingresos$V1==ingresoMinimo)/1000
proba_ingresoMinimo
#Muestras de 25,50 y 100 de una variable con dist normal
set.seed(1001001)
for (n in c(25,50,100)){
ej6muestra <- rnorm(n); nombre <- "Normal 0, 1"
#ej6muestra <- rgamma(n,scale=5, shape=1/2); nombre <- "Gamma 5, 1/2)"
#ej6muestra <- rnorm(n)/runif(n,min=0,max=1); nombre <- "Normal 0, 1 dividido Uniforme 0, 1"
#ej6muestra <- runif(n,min=0,max=1); nombre <- "Uniforme 0, 1"
#ej6muestra <- rexp(n); nombre <- "Exponencial 1"
qqnorm(ej6muestra, main=nombre)
}
for (n in c(25,50,100)){
#ej6muestra <- rnorm(n); nombre <- "Normal 0, 1"
ej6muestra <- rgamma(n,scale=5, shape=1/2); nombre <- "Gamma 5, 1/2)"
#ej6muestra <- rnorm(n)/runif(n,min=0,max=1); nombre <- "Normal 0, 1 dividido Uniforme 0, 1"
#ej6muestra <- runif(n,min=0,max=1); nombre <- "Uniforme 0, 1"
#ej6muestra <- rexp(n); nombre <- "Exponencial 1"
qqnorm(ej6muestra, main=nombre)
}
#Muestras de 25,50 y 100 de una variable con dist normal
set.seed(1001001)
for (n in c(25,50,100)){
#ej6muestra <- rnorm(n); nombre <- "Normal 0, 1"
#ej6muestra <- rgamma(n,scale=5, shape=1/2); nombre <- "Gamma 5, 1/2)"
ej6muestra <- rnorm(n)/runif(n,min=0,max=1); nombre <- "Normal 0, 1 dividido Uniforme 0, 1"
#ej6muestra <- runif(n,min=0,max=1); nombre <- "Uniforme 0, 1"
#ej6muestra <- rexp(n); nombre <- "Exponencial 1"
qqnorm(ej6muestra, main=nombre)
}
#b
quantile(ingresos$V1,0.9)
#c
mean(ingresos$V1)
median(ingresos$V1)
mean(ingresos$V1,0.1)
mean(ingresos$V1,trim=0.1)
#d
sd(ingresos$V1)
IQR(ingresos$V1)
hist(ingresos$V1)
boxplot(ingresos$V1)
####ejercicio 7####
#7.a
n <- 1000
vector <- runif(n)
l2 <- function(c) {
res <- 0
for(val in vector) {
res <- res + (val-c)**2
}
return(res)
}
x <- seq(-500, 500, by=1)
plot(x, l2(x))
l(0)
#7.b
l1 <- function(c) {
res <- 0
for(val in vector) {
res <- res + abs(val-c)
}
return(res)
}
plot(x, l1(x))
vectorAl <- rnorm(n)
x1=mean(vectorAl)
x2=median(vectorAl)
vectorAux = c(vectorAl+5)
y1=mean(vectorAux)
y2=median(vectorAux)
vectorAux2 = c(vectorAl*5)
y11=mean(vectorAux2)
y22=median(vectorAux2)
x1
y11
x1
1/5*y11
x1*5==y11
x1*5==y11
x2*5==y22
vectorAux2 = c(vectorAl*5)
y11=mean(vectorAux2)
y22=median(vectorAux2)
x1*5==y11
x2*5==y22
s2x=function(x){
vectorFunc=rnorm(x)
res=0
for (val in vectorAl) {
res=res+ (val-mean(vectorFunc))**2
}
return= 1/(x-1)*res
}
s2y=function(y){
vectorFunc2=rnorm(y)
res=0
for (val in vectorAl) {
res=res+ (val-mean(vectorFunc2))**2
}
return= 1/(y-1)*res
}
s2x(10)
s2y(s2x(10)+5)
a=s2x(10)
a
b=s2y(s2x(10)+5)
b
a=s2x(0)
b=s2y(vectorAl[0]+5)
a
b
a=s2x(10)
a=s2x(10)
b=s2y(vectorAl[10]+5)
a
b
a=s2x(10)
b=s2y(vectorFucn[10]+5)
s2x=function(x){
vectorFunc=rnorm(x)
res=0
for (val in vectorFunc) {
res=res+ (val-mean(vectorFunc))**2
}
return= 1/(x-1)*res
}
s2y=function(y){
vectorFunc2=rnorm(y)
res=0
for (val in vectorFunc2) {
res=res+ (val-mean(vectorFunc2))**2
}
return= 1/(y-1)*res
}
a=s2x(10)
b=s2y(vectorFucn[10]+5)
a=s2x(10)
b=s2y(vectorAl[10]+5)
a
b
a=s2x(10)
b=s2y(vectorFunc[10]+5)
a=s2x(10)
b=s2y(vectorAl[10]+5)
a
b
a=s2x(10)
b=s2y(vectorAl[10]+5)
a
b
#b
vectorFunc=rnorm
s2x=function(x){
res=0
for (val in vectorFunc) {
res=res+ (val-mean(vectorFunc))**2
}
return= 1/(x-1)*res
}
s2y=function(y){
res=0
for (val in vectorFunc2) {
res=res+ (val-mean(vectorFunc2))**2
}
return= 1/(y-1)*res
}
a=s2x(10)
#b
vectorFunc=rnorm(100)
s2x=function(x){
res=0
for (val in vectorFunc) {
res=res+ (val-mean(vectorFunc))**2
}
return= 1/(100-1)*res
}
s2y=function(y){
res=0
for (val in vectorFunc) {
res=res+ ((val+5)-mean(vectorFunc))**2
}
return= 1/(100-1)*res
}
a=s2x(10)
b=s2y(10)
a
b
a=s2x(100)
b=s2y(100)
a
b
s2x1=s2x(100)
s2x1
s2x1=s2x(100)
s2x1
s2y1=s2y(100)
s2y1
#b
vectorFuncX=rnorm(100)
vectorFuncY=c(vectorFuncX+10)
length(vectorFuncY)
#b
vectorFuncX=rnorm(100)
vectorFuncY=c(vectorFuncX+10)
s2x=function(x){
res=0
for (val in vectorFuncX) {
res=res+ (val-mean(vectorFuncX))**2
}
return= (1/99)*res
}
s2y=function(y){
res=0
for (val in vectorFuncY) {
res=res+ (val-mean(vectorFuncY))**2
}
return= (1/99)*res
}
varianzaDeX=s2x(100)
varianzaDeY=s2y(100)
varianzaDeX
varianzaDeY
varianzaDeX==varianzaDeY
vectorFuncY2=c(vectorFuncX*10)
s2y2=function(y){
res=0
for (val in vectorFuncY2) {
res=res+ (val-mean(vectorFuncY2))**2
}
return= (1/99)*res
}
varianzaDeY2=s2y2(100)
varianzaDeY2
10**2*varianzaDeX
s2x2=function(x){
res=0
for (val in vectorFuncX) {
res=res+ (val)**2
}
return= (1/99)*res- (100/99)*((mean(vectorFuncX))**2)
}
varianzaDeX2=s2x2(100)
varianzaDeX2
varianzaDeX
####ejercicio 1####
carbohidratos=c(76.93 76.88 77.07 76.68 76.39 75.09 77.67 76.88 78.15 76.50 77.16 76.42)
####ejercicio 1####
carbohidratos=c(76.93, 76.88, 77.07, 76.68, 76.39, 75.09, 77.67, 76.88, 78.15, 76.50, 77.16, 76.42)
esperanza=mean(carbohidratos)
eséranza
esperanza
mediana=median(carbohidratos)
mediana=median(carbohidratos)
mediana
proba=sum(carbohidratos<76.5)/length(carbohidratos)
proba
